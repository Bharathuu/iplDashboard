//index.css
.home-route-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-image: url('https://assets.ccbp.in/frontend/react-js/ipl-dashboard-sm-bg.png');
  background-size: cover;
  min-height: 100vh;
}
@media screen and (min-width: 768px) {
  .home-route-container {
    background-image: url('https://assets.ccbp.in/frontend/react-js/ipl-dashboard-lg-bg.png');
  }
}
.teams-list-container {
  width: 90%;
  max-width: 600px;
}
@media screen and (min-width: 768px) {
  .teams-list-container {
    width: 90%;
    max-width: 1100px;
  }
}
.ipl-dashboard-heading-container {
  display: flex;
  justify-content: center;
  align-items: center;
}
.ipl-logo {
  width: 25px;
  height: 40px;
}
@media screen and (min-width: 768px) {
  .ipl-logo {
    width: 60px;
    height: 90px;
  }
}
.ipl-dashboard-heading {
  color: #ffffff;
  font-family: 'Roboto';
  font-size: 36px;
  margin-left: 12px;
}
@media screen and (min-width: 768px) {
  .ipl-dashboard-heading {
    font-size: 72px;
    margin-left: 16px;
  }
}
.loader-container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 80vh;
}
.teams-list {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0px;
}
//index.js

import {Component} from 'react'
import Loader from 'react-loader-spinner'
import TeamCard from '../TeamCard'

import './index.css'
const teamsApiUrl = 'https://apis.ccbp.in/ipl'

class Home extends Component {
  state = {
    isLoading: true,
    teamsData: [],
  }
  componentDidMount() {
    this.getTeams()
  }
  getTeams = async () => {
    const response = await fetch(teamsApiUrl)
    const fetchedData = await response.json()
    const formattedData = fetchedData.teams.map(team => ({
      name: team.name,
      id: team.id,
      teamImageUrl: team.team_image_url,
    }))
    this.setState({
      teamsData: formattedData,
      isLoading: false,
    })
  }
  renderTeamsList = () => {
    const {teamsData} = this.state

    return (
      <ul className="teams-list">
        {teamsData.map(team => (
          <TeamCard teamDetails={team} key={team.id} />
        ))}
      </ul>
    )
  }
  renderLoader = () => (
    <div testid="loader" className="loader-conatiner">
      <Loader type="Oval" color="#ffffff" height={50} />
    </div>
  )
  render() {
    const {isLoading} = this.state

    return (
      <div className="home-route-conatiner">
        <div className="teams-list-conatiner">
          <div className="ipl-dashboard-heading-container">
            <img
              src="https://assets.ccbp.in/frontend/react-js/ipl-logo-img.png"
              alt="ipl logo"
              className="ipl-logo"
            />
            <h1 className="ipl-dashboard-heading">IPL Dashboard</h1>
          </div>
          {isLoading ? this.renderLoader() : this.renderTeamsList()}
        </div>
      </div>
    )
  }
}
export default Home
